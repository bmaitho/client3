{"ast":null,"code":"var _jsxFileName = \"/home/brian/PHASE 5 client/Project-Tracker-Client/src/pages/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const {\n    classId\n  } = useParams();\n  const [projects, setProjects] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/projects?class_id=${classId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setProjects(data);\n        } else {\n          console.error('Failed to fetch projects:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, [classId]);\n  const filteredProjects = projects.filter(project => project.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Projects in Class \", classId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.poster_url,\n          alt: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.github_link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"GitHub Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"v60IP0pdZOxB8NVuYGltM4f6vP8=\", false, function () {\n  return [useParams];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useParams","SearchBar","jsxDEV","_jsxDEV","Projects","_s","classId","projects","setProjects","searchTerm","setSearchTerm","fetchProjects","response","fetch","ok","data","json","console","error","statusText","filteredProjects","filter","project","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","poster_url","alt","description","href","github_link","target","rel","id","_c","$RefreshReg$"],"sources":["/home/brian/PHASE 5 client/Project-Tracker-Client/src/pages/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar';\nimport './Projects.css';\n\nconst Projects = () => {\n  const { classId } = useParams();\n  const [projects, setProjects] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/projects?class_id=${classId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n          setProjects(data);\n        } else {\n          console.error('Failed to fetch projects:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n\n    fetchProjects();\n  }, [classId]);\n\n  const filteredProjects = projects.filter(project =>\n    project.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"projects\">\n      <h2>Projects in Class {classId}</h2>\n      <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      <div className=\"project-list\">\n        {filteredProjects.map(project => (\n          <div key={project.id} className=\"project-card\">\n            <img src={project.poster_url} alt={project.name} />\n            <h3>{project.name}</h3>\n            <p>{project.description}</p>\n            <a href={project.github_link} target=\"_blank\" rel=\"noopener noreferrer\">GitHub Link</a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}